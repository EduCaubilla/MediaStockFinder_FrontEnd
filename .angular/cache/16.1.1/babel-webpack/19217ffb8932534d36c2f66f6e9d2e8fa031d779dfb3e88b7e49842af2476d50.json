{"ast":null,"code":"import _defineProperty from \"/Users/educaubilla/Desktop/Code/Media-Stock-Finder Project/Versiones/MSF 230623B/MediaStockFinder_FrontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nexport let HomeComponent = class HomeComponent {\n  constructor(request, router, helper) {\n    _defineProperty(this, \"request\", void 0);\n    _defineProperty(this, \"router\", void 0);\n    _defineProperty(this, \"helper\", void 0);\n    _defineProperty(this, \"search\", void 0);\n    _defineProperty(this, \"arrPhotosRandom\", void 0);\n    _defineProperty(this, \"arrPhotosNature\", void 0);\n    _defineProperty(this, \"arrPhotosPeople\", void 0);\n    _defineProperty(this, \"arrPhotosFoodDrink\", void 0);\n    _defineProperty(this, \"arrVideos\", void 0);\n    _defineProperty(this, \"arr1\", void 0);\n    _defineProperty(this, \"arr2\", void 0);\n    _defineProperty(this, \"arr3\", void 0);\n    _defineProperty(this, \"arr4\", void 0);\n    _defineProperty(this, \"onePhoto\", void 0);\n    _defineProperty(this, \"mainPhoto\", void 0);\n    _defineProperty(this, \"selectType\", void 0);\n    _defineProperty(this, \"loading\", void 0);\n    _defineProperty(this, \"showVideo\", void 0);\n    _defineProperty(this, \"response$\", void 0);\n    _defineProperty(this, \"user\", void 0);\n    _defineProperty(this, \"isLogged\", void 0);\n    _defineProperty(this, \"type\", void 0);\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"link\", void 0);\n    _defineProperty(this, \"page\", void 0);\n    _defineProperty(this, \"newItem\", void 0);\n    this.request = request;\n    this.router = router;\n    this.helper = helper;\n    this.search = '';\n    this.loading = true;\n    this.showVideo = false;\n    this.onePhoto = '';\n  }\n  ngOnInit() {\n    this.scroll();\n    this.isLogged = this.request.getLogged();\n    console.log('User logged: ', this.isLogged);\n    this.getOneRandom$();\n    this.getRandom$();\n    this.bgJumboStyle();\n    this.refreshUser();\n  }\n  refreshUser() {\n    this.id = localStorage.getItem('id');\n    this.user = this.request.getUser();\n    if (this.user === undefined && this.id !== null) {\n      this.response$ = this.request.searchUser$(this.id);\n      return this.response$.subscribe(data => {\n        console.log('VUELVE EL USER ACTUALIZADO ', data);\n        this.user = data.user;\n        this.request.newRefreshUser(this.user);\n      }, error => console.log(error));\n    }\n  }\n  getOneRandom$() {\n    this.response$ = this.request.oneRandom$();\n    return this.response$.subscribe(data => {\n      this.onePhoto = data[0];\n      console.log(this.onePhoto);\n      this.mainPhoto = data[0].imageLarge;\n      console.log(this.mainPhoto);\n    });\n  }\n  bgJumboStyle() {\n    const styles = {\n      'background-image': `url(${this.mainPhoto})`\n    };\n    return styles;\n  }\n  selectTrigger($event) {\n    this.selectType = $event.target.value;\n    console.log(this.selectType);\n  }\n  searchStart() {\n    switch (this.selectType) {\n      case 'selectPhoto':\n        this.router.navigate([`/search-photo/${this.search}`]);\n        break;\n      case 'selectVideo':\n        this.router.navigate([`/search-video/${this.search}`]);\n        break;\n      default:\n        this.router.navigate([`/search-photo/${this.search}`]);\n        break;\n    }\n  }\n  getRandom$() {\n    this.loading = true;\n    this.cleanView();\n    this.response$ = this.request.listRandom$();\n    return this.response$.subscribe(data => {\n      // console.log(data);\n      this.arrPhotosRandom = data;\n      this.helper.shuffle(this.arrPhotosRandom);\n      const numberArr = Math.ceil(this.arrPhotosRandom.length / 4);\n      [this.arr1, this.arr2, this.arr3, this.arr4] = this.helper.partitionArray(this.arrPhotosRandom, numberArr);\n      console.log(this.arr1);\n      this.loading = false;\n    }, error => console.log(error));\n  }\n  getCatNature$() {\n    this.loading = true;\n    this.cleanView();\n    this.response$ = this.request.searchPhotosNature$();\n    return this.response$.subscribe(data => {\n      this.arrPhotosNature = data;\n      this.helper.shuffle(this.arrPhotosNature);\n      const numberArr = Math.ceil(this.arrPhotosNature.length / 4);\n      [this.arr1, this.arr2, this.arr3, this.arr4] = this.helper.partitionArray(this.arrPhotosNature, numberArr);\n      this.loading = false;\n    }, error => console.log(error));\n  }\n  getCatPeople$() {\n    this.loading = true;\n    this.cleanView();\n    this.response$ = this.request.searchPhotosPeople$();\n    return this.response$.subscribe(data => {\n      this.arrPhotosPeople = data;\n      this.helper.shuffle(this.arrPhotosPeople);\n      const numberArr = Math.ceil(this.arrPhotosPeople.length / 4);\n      [this.arr1, this.arr2, this.arr3, this.arr4] = this.helper.partitionArray(this.arrPhotosPeople, numberArr);\n      this.loading = false;\n    }, error => console.log(error));\n  }\n  getCatFoodDrink$() {\n    this.loading = true;\n    this.cleanView();\n    this.response$ = this.request.searchPhotosFoodDrink$();\n    return this.response$.subscribe(data => {\n      this.arrPhotosFoodDrink = data;\n      this.helper.shuffle(this.arrPhotosFoodDrink);\n      const numberArr = Math.ceil(this.arrPhotosFoodDrink.length / 4);\n      [this.arr1, this.arr2, this.arr3, this.arr4] = this.helper.partitionArray(this.arrPhotosFoodDrink, numberArr);\n      this.loading = false;\n    }, error => console.log(error));\n  }\n  cleanView() {\n    [this.arr1, this.arr2, this.arr3, this.arr4] = [[], [], [], []];\n  }\n  getVideos$() {\n    this.loading = true;\n    this.cleanView();\n    this.showVideo = true;\n    this.response$ = this.request.getVideos$();\n    return this.response$.subscribe(data => {\n      this.arrVideos = data;\n      this.helper.shuffle(this.arrVideos);\n      const numberArr = Math.ceil(this.arrVideos.length / 4);\n      [this.arr1, this.arr2, this.arr3, this.arr4] = this.helper.partitionArray(this.arrVideos, numberArr);\n      this.loading = false;\n      console.log(this.arrVideos);\n    }, error => console.log(error));\n  }\n  // toVideoPage($event) {\n  //   this.type = $event.target.dataset.font;\n  //   this.id = $event.target.dataset.id;\n  //   console.log(this.type);\n  //   console.log(this.id);\n  //   this.router.navigate([`/video-page/${this.type}/${this.id}`]);\n  // }\n  triggerDownloadPhoto($event) {\n    this.link = $event.target.dataset.link;\n    this.type = $event.target.dataset.font;\n    this.id = $event.target.dataset.id;\n    console.log(this.link);\n    console.log(this.type);\n    console.log(this.id);\n    const URL_API_DOWNLOADPHOTO = `${environment.API_URL}/photo/download/${this.id}/${this.type}/${this.link}`;\n    window.location.assign(URL_API_DOWNLOADPHOTO);\n  }\n  triggerDownloadVideo($event) {\n    this.link = $event.target.dataset.link;\n    const link = btoa(`${this.link}`);\n    console.log(this.link);\n    const URL_API_DOWNLOADVIDEO = `${environment.API_URL}/video/download/${link}`;\n    window.location.assign(URL_API_DOWNLOADVIDEO);\n  }\n  toVideoNextPage$() {\n    if (!this.page) {\n      this.page = 2;\n    } else {\n      this.page += 1;\n    }\n    console.log(this.page);\n    this.loading = true;\n    this.cleanView();\n    this.showVideo = true;\n    this.response$ = this.request.getNextVideos$(this.page);\n    return this.response$.subscribe(data => {\n      this.arrVideos = data;\n      console.log(this.arrVideos);\n      this.helper.shuffle(this.arrVideos);\n      const numberArr = Math.ceil(this.arrVideos.length / 4);\n      [this.arr1, this.arr2, this.arr3, this.arr4] = this.helper.partitionArray(this.arrVideos, numberArr);\n      this.loading = false;\n    }, error => console.log(error));\n  }\n  saveItemUser($event) {\n    const id = $event.target.dataset.id;\n    console.log(id);\n    const type = $event.target.dataset.font;\n    console.log(type);\n    this.getOneImageSave$(type, id);\n  }\n  getOneImageSave$(type, id) {\n    console.log(this.user);\n    this.response$ = this.request.searchOnePhoto$(type, id);\n    return this.response$.subscribe(data => {\n      this.newItem = data;\n      console.log('RECIBIMOS ITEM PARA AÑADIR ' + this.newItem);\n      this.updateUser$();\n    }, error => {\n      console.log(error);\n    });\n  }\n  updateUser$() {\n    console.log('ENVIAMOS ITEM PARA USER ', this.user);\n    this.response$ = this.request.addUserItem$(this.newItem);\n    return this.response$.subscribe(data => {\n      this.user = data;\n      console.log('VUELVE EL USER ACTUALIZADO ', this.user);\n      alert('The image has been added on your Desk.');\n    }, error => console.log(error));\n  }\n  saveVideoUser$($event) {\n    const id = $event.target.dataset.id;\n    console.log(id);\n    const type = $event.target.dataset.font;\n    console.log(type);\n    this.getOneVideoSave$(type, id);\n  }\n  getOneVideoSave$(type, id) {\n    console.log(this.user);\n    this.response$ = this.request.searchOneVideo$(type, id);\n    return this.response$.subscribe(data => {\n      this.newItem = data;\n      console.log('RECIBIMOS ITEM PARA AÑADIR ', this.newItem);\n      this.updateUser$();\n    }, error => {\n      console.log(error);\n    });\n  }\n  scroll() {\n    window.onscroll = () => {\n      this.scrollFunction();\n    };\n  }\n  scrollFunction() {\n    if (document.body.scrollTop > 1500 || document.documentElement.scrollTop > 1500) {\n      document.getElementById('btnTop').style.display = 'block';\n    } else {\n      document.getElementById('btnTop').style.display = 'none';\n    }\n  }\n  topFunction() {\n    document.body.scrollTop = 0; // For Safari\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n  }\n};\n\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}